/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernanceToken,
  GovernanceTokenInterface,
} from "../GovernanceToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintFreeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600f81526020017f476f7665726e616e6365546f6b656e00000000000000000000000000000000008152506040518060400160405280600381526020017f4756520000000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620000b8565b508060049080519060200190620000af929190620000b8565b505050620001cd565b828054620000c69062000168565b90600052602060002090601f016020900481019282620000ea576000855562000136565b82601f106200010557805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013557825182559160200191906001019062000118565b5b50905062000145919062000149565b5090565b5b80821115620001645760008160009055506001016200014a565b5090565b600060028204905060018216806200018157607f821691505b602082108114156200019857620001976200019e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61177c80620001dd6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063dd62ed3e14610251578063e92f185714610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161028b565b6040516100ce9190610ffb565b60405180910390f35b6100f160048036038101906100ec9190610e26565b61031d565b6040516100fe9190610fe0565b60405180910390f35b61010f61033b565b60405161011c919061111d565b60405180910390f35b61013f600480360381019061013a9190610dd7565b610345565b60405161014c9190610fe0565b60405180910390f35b61015d61043d565b60405161016a9190611138565b60405180910390f35b61018d60048036038101906101889190610e26565b610446565b60405161019a9190610fe0565b60405180910390f35b6101bd60048036038101906101b89190610d72565b6104f2565b6040516101ca919061111d565b60405180910390f35b6101db61053a565b6040516101e89190610ffb565b60405180910390f35b61020b60048036038101906102069190610e26565b6105cc565b6040516102189190610fe0565b60405180910390f35b61023b60048036038101906102369190610e26565b6106b7565b6040516102489190610fe0565b60405180910390f35b61026b60048036038101906102669190610d9b565b6106d5565b604051610278919061111d565b60405180910390f35b61028961075c565b005b60606003805461029a90611418565b80601f01602080910402602001604051908101604052809291908181526020018280546102c690611418565b80156103135780601f106102e857610100808354040283529160200191610313565b820191906000526020600020905b8154815290600101906020018083116102f657829003601f168201915b5050505050905090565b600061033161032a61078a565b8484610792565b6001905092915050565b6000600254905090565b600061035284848461095d565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061039d61078a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561041d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104149061107d565b60405180910390fd5b6104318561042961078a565b858403610792565b60019150509392505050565b60006012905090565b60006104e861045361078a565b84846001600061046161078a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104e3919061116f565b610792565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461054990611418565b80601f016020809104026020016040519081016040528092919081815260200182805461057590611418565b80156105c25780601f10610597576101008083540402835291602001916105c2565b820191906000526020600020905b8154815290600101906020018083116105a557829003601f168201915b5050505050905090565b600080600160006105db61078a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068f906110dd565b60405180910390fd5b6106ac6106a361078a565b85858403610792565b600191505092915050565b60006106cb6106c461078a565b848461095d565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107883361076861043d565b60ff16600a6107779190611218565b60646107839190611336565b610bde565b565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f9906110bd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610872576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108699061103d565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610950919061111d565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c49061109d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a349061101d565b60405180910390fd5b610a48838383610d3e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ace576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac59061105d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b61919061116f565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bc5919061111d565b60405180910390a3610bd8848484610d43565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c45906110fd565b60405180910390fd5b610c5a60008383610d3e565b8060026000828254610c6c919061116f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cc1919061116f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d26919061111d565b60405180910390a3610d3a60008383610d43565b5050565b505050565b505050565b600081359050610d5781611718565b92915050565b600081359050610d6c8161172f565b92915050565b600060208284031215610d8457600080fd5b6000610d9284828501610d48565b91505092915050565b60008060408385031215610dae57600080fd5b6000610dbc85828601610d48565b9250506020610dcd85828601610d48565b9150509250929050565b600080600060608486031215610dec57600080fd5b6000610dfa86828701610d48565b9350506020610e0b86828701610d48565b9250506040610e1c86828701610d5d565b9150509250925092565b60008060408385031215610e3957600080fd5b6000610e4785828601610d48565b9250506020610e5885828601610d5d565b9150509250929050565b610e6b816113a2565b82525050565b6000610e7c82611153565b610e86818561115e565b9350610e968185602086016113e5565b610e9f816114a8565b840191505092915050565b6000610eb760238361115e565b9150610ec2826114c6565b604082019050919050565b6000610eda60228361115e565b9150610ee582611515565b604082019050919050565b6000610efd60268361115e565b9150610f0882611564565b604082019050919050565b6000610f2060288361115e565b9150610f2b826115b3565b604082019050919050565b6000610f4360258361115e565b9150610f4e82611602565b604082019050919050565b6000610f6660248361115e565b9150610f7182611651565b604082019050919050565b6000610f8960258361115e565b9150610f94826116a0565b604082019050919050565b6000610fac601f8361115e565b9150610fb7826116ef565b602082019050919050565b610fcb816113ce565b82525050565b610fda816113d8565b82525050565b6000602082019050610ff56000830184610e62565b92915050565b600060208201905081810360008301526110158184610e71565b905092915050565b6000602082019050818103600083015261103681610eaa565b9050919050565b6000602082019050818103600083015261105681610ecd565b9050919050565b6000602082019050818103600083015261107681610ef0565b9050919050565b6000602082019050818103600083015261109681610f13565b9050919050565b600060208201905081810360008301526110b681610f36565b9050919050565b600060208201905081810360008301526110d681610f59565b9050919050565b600060208201905081810360008301526110f681610f7c565b9050919050565b6000602082019050818103600083015261111681610f9f565b9050919050565b60006020820190506111326000830184610fc2565b92915050565b600060208201905061114d6000830184610fd1565b92915050565b600081519050919050565b600082825260208201905092915050565b600061117a826113ce565b9150611185836113ce565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111ba576111b961144a565b5b828201905092915050565b6000808291508390505b600185111561120f578086048111156111eb576111ea61144a565b5b60018516156111fa5780820291505b8081029050611208856114b9565b94506111cf565b94509492505050565b6000611223826113ce565b915061122e836113ce565b925061125b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611263565b905092915050565b600082611273576001905061132f565b81611281576000905061132f565b816001811461129757600281146112a1576112d0565b600191505061132f565b60ff8411156112b3576112b261144a565b5b8360020a9150848211156112ca576112c961144a565b5b5061132f565b5060208310610133831016604e8410600b84101617156113055782820a905083811115611300576112ff61144a565b5b61132f565b61131284848460016111c5565b925090508184048111156113295761132861144a565b5b81810290505b9392505050565b6000611341826113ce565b915061134c836113ce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113855761138461144a565b5b828202905092915050565b600061139b826113ae565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156114035780820151818401526020810190506113e8565b83811115611412576000848401525b50505050565b6000600282049050600182168061143057607f821691505b6020821081141561144457611443611479565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61172181611390565b811461172c57600080fd5b50565b611738816113ce565b811461174357600080fd5b5056fea2646970667358221220db8fc891b6de1fc435a3f5ebf5235b564c3a493986f197edbeb03a4130f0125364736f6c63430008040033";

export class GovernanceToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernanceToken> {
    return super.deploy(overrides || {}) as Promise<GovernanceToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GovernanceToken {
    return super.attach(address) as GovernanceToken;
  }
  connect(signer: Signer): GovernanceToken__factory {
    return super.connect(signer) as GovernanceToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceTokenInterface {
    return new utils.Interface(_abi) as GovernanceTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceToken {
    return new Contract(address, _abi, signerOrProvider) as GovernanceToken;
  }
}
